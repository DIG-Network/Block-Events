name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        type: string

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Release and Publish
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build project
      run: npm run build
    
    - name: Check version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Update package.json version
        npm version $VERSION --no-git-tag-version
    
    - name: Generate changelog
      id: changelog
      run: |
        # Simple changelog generation
        echo "# Changelog for v${{ steps.version.outputs.version }}" > CHANGELOG_RELEASE.md
        echo "" >> CHANGELOG_RELEASE.md
        echo "## What's Changed" >> CHANGELOG_RELEASE.md
        echo "" >> CHANGELOG_RELEASE.md
        
        # Get commits since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -n "$LAST_TAG" ]; then
          git log --pretty=format:"- %s (%h)" $LAST_TAG..HEAD >> CHANGELOG_RELEASE.md
        else
          git log --pretty=format:"- %s (%h)" --max-count=20 >> CHANGELOG_RELEASE.md
        fi
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: Release v${{ steps.version.outputs.version }}
        body_path: CHANGELOG_RELEASE.md
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, '-') }}
        files: |
          dist/**/*
          README.md
          LICENSE
    
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Publish to GitHub Packages
      run: |
        # Configure for GitHub Packages
        npm config set @chia:registry https://npm.pkg.github.com
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}