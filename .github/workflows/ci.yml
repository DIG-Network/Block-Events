name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on Node ${{ matrix.node }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        node: ['16.x', '18.x', '20.x']
        os: [ubuntu-latest, windows-latest, macos-latest]
        exclude:
          # Exclude some combinations to save CI time
          - os: windows-latest
            node: '16.x'
          - os: macos-latest
            node: '16.x'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Build project
      run: npm run build
    
    - name: Run tests
      run: npm test
    
    - name: Generate coverage report
      if: matrix.node == '20.x' && matrix.os == 'ubuntu-latest'
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      if: matrix.node == '20.x' && matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build-and-type-check:
    name: Build and Type Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Type check
      run: npx tsc --noEmit
    
    - name: Build for production
      run: npm run build
    
    - name: Check build output
      run: |
        if [ ! -d "dist" ]; then
          echo "Build failed: dist directory not found"
          exit 1
        fi
        echo "Build successful: dist directory created"
        ls -la dist/

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
    
    - name: Check for outdated dependencies
      run: npm outdated
      continue-on-error: true

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: chia_test
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: chia_test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run integration tests
      env:
        DATABASE_TYPE: postgres
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        DATABASE_NAME: chia_test_db
        DATABASE_USER: chia_test
        DATABASE_PASSWORD: test_password
      run: |
        # Create integration test script if it exists
        if [ -f "tests/integration/run.js" ]; then
          node tests/integration/run.js
        else
          echo "No integration tests found, skipping..."
        fi